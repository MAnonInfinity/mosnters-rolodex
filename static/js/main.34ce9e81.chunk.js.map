{"version":3,"sources":["reportWebVitals.js","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","a","fetch","response","json","data","this","setState","e","target","value","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mGCHDQ,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNbC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEOD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACrB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCN1BM,G,OAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuDHG,E,kDAzDb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAU,GACVS,YAAa,IAIf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBART,E,4FAkBb,8BAAAC,EAAA,4DACc,6CADd,SAE0BC,MADZ,8CADd,cAEQC,EAFR,gBAGqBA,EAASC,OAH9B,OAGQC,EAHR,OAIEC,KAAKC,SAAS,CAACjB,SAAUe,IAJ3B,gD,gFAOA,SAAaG,GACXF,KAAKC,SAAS,CAACR,YAAaS,EAAEC,OAAOC,U,oBAQvC,WAEE,MAAgCJ,KAAKR,MAA9BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YAIXY,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC5CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAGpD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcY,KAAKZ,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,W,GArDVI,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjD,K","file":"static/js/main.34ce9e81.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { directive } from '@babel/types';\r\nimport React from 'react';\r\nimport './card.style.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img \r\n            alt=\"Monster\" \r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.style.css'\r\nimport { Card } from '../card/card.component'\r\n\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n               props.monsters.map(monster=>(\r\n                    <Card key={monster.id} monster={monster}/>)\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './search-box.style.css'\r\n                         \r\n                          // Destructring the props object\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component.jsx'\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state={\n      monsters: [],\n      searchField: \"\"\n    };\n\n    // Binding event handlers to THIS instance inside the constructor (best way to bind)\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // componentDidMount(){\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")  // Making an API request\n  //    .then(resonse => resonse.json())\n  //    .then(users => this.setState({ monsters: users }))\n  //    .catch(err => console.log(\"I have errored\"))\n  // }\n\n  async componentDidMount(){\n    const url = \"https://jsonplaceholder.typicode.com/users\"; // Making an API request\n    const response  = await fetch(url);\n    const data = await response.json();\n    this.setState({monsters: data});\n  }\n\n  handleChange(e){\n    this.setState({searchField: e.target.value});\n  }\n\n  // Another way to bind the function to THIS instance (second best way to do bind)\n  // handleChange = e => {\n  //   this.setState({ searchField: e.target.value });\n  // }\n\n  render(){\n\n    const {monsters, searchField} = this.state; // Called Destructring\n    // Shortcut way of this\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\n// render takes 3 args: kya dikhaana hai, kaha dikhaana hai, callback(usually not needed)\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}